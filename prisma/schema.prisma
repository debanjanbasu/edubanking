generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model transactions {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  reference  Int?      @unique(map: "reference")
  withdrawal Decimal?  @db.Decimal(10, 2) // Use Decimal type with precision and scale
  deposit    Decimal?  @db.Decimal(10, 2) // Use Decimal type with precision and scale
  balance    Decimal?  @db.Decimal(10, 2) // Use Decimal type with precision and scale
  timestamp  DateTime? @default(now()) @db.Timestamp(0)
}

model User {
  id           String          @id
  bankAccounts BankAccount[]
  category     Category[]
  tranactions  Transactions1[]
}

model BankAccount {
  id            Int             @id @default(autoincrement())
  accountNumber String
  balance       BigInt
  user          User            @relation(fields: [userId], references: [id])
  userId        String
  transaction   Transactions1[]

  @@unique([accountNumber, userId])
  @@index([userId])
}

model Category {
  id          Int             @id @default(autoincrement())
  name        String
  type        String
  icon        String
  iconColor   String
  user        User            @relation(fields: [userId], references: [id])
  userId      String
  transaction Transactions1[]

  @@unique([name, type, userId])
  @@index([userId])
}

model Transactions1 {
  id            Int         @id @default(autoincrement())
  date          DateTime
  amount        BigInt
  note          String?
  recipient     String?
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  bankAccount   BankAccount @relation(fields: [bankAccountId], references: [id])
  bankAccountId Int
  category      Category?   @relation(fields: [categoryId], references: [id])
  categoryId    Int?

  @@index([bankAccountId])
  @@index([categoryId])
  @@index([userId])
}